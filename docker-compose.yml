version: "3.8"

networks:
  kfc_net:
    driver: ${NETWORKS_DRIVER}
    external: true

volumes:
  zookeeper:
    driver: ${VOLUMES_DRIVER}
  kafka:
    driver: ${VOLUMES_DRIVER}
  clickhouse:
    driver: ${VOLUMES_DRIVER}
  clickhouse-server:
    driver: ${VOLUMES_DRIVER}
  superset_home:
    driver: ${VOLUMES_DRIVER}

services:

  # -------------------------------- ZooKeeper --------------------------------
  zookeeper:
    image: bitnami/zookeeper:3.7
    container_name: zookeeper
    hostname: zookeeper
    restart: unless-stopped
    ports:
      - ${ZOOKEEPER_PORT}:2181
    volumes:
      - zookeeper:/bitnami
    environment:
      - TZ=${TZ}
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kfc_net

  # -------------------------------- Kafka --------------------------------
  kafka:
    image: bitnami/kafka:2.8.0
    container_name: kafka
    hostname: kafka
    ports:
      - 9093:9093
    volumes:
      - kafka:/bitnami
    environment:
      - TZ=${TZ}
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:${ZOOKEEPER_PORT}
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - kfc_net

  # -------------------------------- CMAK --------------------------------
  # cmak:
  #   build: ./cmak
  #   container_name: cmak
  #   hostname: cmak
  #   ports:
  #     - 9000:9000
  #   environment:
  #     - TZ=${TZ}
  #     - ZK_HOSTS=zookeeper:${ZOOKEEPER_PORT}
  #     - KAFKA_MANAGER_AUTH_ENABLED=true
  #     - KAFKA_MANAGER_USERNAME=admin
  #     - KAFKA_MANAGER_PASSWORD=admin
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - kfc_net

  # -------------------------------- Filebeat --------------------------------
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.2.1
    container_name: filebeat
    hostname: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ${ETC_LOCALTIME}:/etc/localtime:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $HOME/Desktop/log/messages:/var/log/messages
    networks:
      - kfc_net
    command: [ "-e", "--strict.perms=false" ]

  # -------------------------------- Flink --------------------------------
  jobmanager:
    image: flink:1.15.0-scala_2.12-java11
    container_name: jobmanager
    hostname: jobmanager
    ports:
      - 8081:8081
    environment:
      - TZ=${TZ}
      - FLINK_PROPERTIES=${FLINK_PROPERTIES_JOB}
    networks:
      - kfc_net
    command: [ "jobmanager" ]

  taskmanager:
    image: flink:1.15.0-scala_2.12-java11
    container_name: taskmanager
    scale: 1
    environment:
      - TZ=${TZ}
      - FLINK_PROPERTIES=${FLINK_PROPERTIES_TASK}
    depends_on:
      - jobmanager
    networks:
      - kfc_net
    command: [ "taskmanager" ]

  # -------------------------------- ClickHouse --------------------------------
  clickhouse-server:
    image: clickhouse/clickhouse-server:22.5.1
    container_name: clickhouse-server
    hostname: clickhouse-server
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - 18123:8123
      - 19000:9000
    volumes:
      - clickhouse:/var/lib/clickhouse
      - clickhouse-server:/var/lib/clickhouse-server
    environment:
      - TZ=${TZ}
      - HOSTNAME=clickhouse-server
    networks:
      - kfc_net

  # 地址不正确
  # clickhouse-client:
  #   image: clickhouse/clickhouse-client:22.1.3
  #   container_name: clickhouse-client
  #   hostname: clickhouse-client
  #   environment:
  #     - TZ=${TZ}
  #   networks:
  #     - kfc_net
  #   command: [ "--host=localhost:19000" ]


  # -------------------------------- Superset --------------------------------
  superset:
    env_file: ${SUPERSET_ENV_FILE}
    image: apache/superset:latest-dev
    container_name: superset-app
    user: root
    ports:
      - 8088:8088
    volumes:
      - ./superset/docker:/app/docker
      - superset_home:/app/superset_home
    environment:
      - TZ=${TZ}
    # depends_on:
    #   - db
    #   - redis
    networks:
      - kfc_net
    command: [ "/app/docker/docker-bootstrap.sh", "app-gunicorn" ]
  
  # superset-init:
  #   env_file: ${SUPERSET_ENV_FILE}
  #   image: apache/superset:latest-dev
  #   container_name: superset_init
  #   user: root
  #   volumes:
  #     - ./superset/docker:/app/docker
  #     - superset_home:/app/superset_home
  #   environment:
  #     - TZ=${TZ}
  #   # depends_on:
  #   #   - db
  #   #   - redis
  #   command: ["/app/docker/docker-init.sh"]

  # superset-worker:
  #   env_file: ${SUPERSET_ENV_FILE}
  #   image: apache/superset:latest-dev
  #   container_name: superset_worker
  #   user: root
  #   volumes:
  #     - ./superset/docker:/app/docker
  #     - superset_home:/app/superset_home
  #   environment:
  #     - TZ=${TZ}
  #   # depends_on:
  #   #   - db
  #   #   - redis
  #   networks:
  #     - kfc_net
  #   command: [ "/app/docker/docker-bootstrap.sh", "worker" ]

  # superset-worker-beat:
  #   env_file: ${SUPERSET_ENV_FILE}
  #   image: apache/superset:latest-dev
  #   container_name: superset_worker_beat
  #   user: root
  #   volumes:
  #     - ./superset/docker:/app/docker
  #     - superset_home:/app/superset_home
  #   environment:
  #     - TZ=${TZ}
  #   # depends_on:
  #   #   - db
  #   #   - redis
  #   networks:
  #     - kfc_net
  #   command: [ "/app/docker/docker-bootstrap.sh", "beat" ]
